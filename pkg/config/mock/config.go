// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/config/config.go

// Package configmock is a generated GoMock package.
package configmock

import (
	configmodel "go-rest-api-boilerplate/pkg/config/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockConfig is a mock of Config interface.
type MockConfig struct {
	ctrl     *gomock.Controller
	recorder *MockConfigMockRecorder
}

// MockConfigMockRecorder is the mock recorder for MockConfig.
type MockConfigMockRecorder struct {
	mock *MockConfig
}

// NewMockConfig creates a new mock instance.
func NewMockConfig(ctrl *gomock.Controller) *MockConfig {
	mock := &MockConfig{ctrl: ctrl}
	mock.recorder = &MockConfigMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConfig) EXPECT() *MockConfigMockRecorder {
	return m.recorder
}

// GetAppEnvironment mocks base method.
func (m *MockConfig) GetAppEnvironment() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAppEnvironment")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetAppEnvironment indicates an expected call of GetAppEnvironment.
func (mr *MockConfigMockRecorder) GetAppEnvironment() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAppEnvironment", reflect.TypeOf((*MockConfig)(nil).GetAppEnvironment))
}

// GetRPCConfig mocks base method.
func (m *MockConfig) GetRPCConfig() configmodel.RPCServer {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRPCConfig")
	ret0, _ := ret[0].(configmodel.RPCServer)
	return ret0
}

// GetRPCConfig indicates an expected call of GetRPCConfig.
func (mr *MockConfigMockRecorder) GetRPCConfig() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRPCConfig", reflect.TypeOf((*MockConfig)(nil).GetRPCConfig))
}

// GetServerConfig mocks base method.
func (m *MockConfig) GetServerConfig() configmodel.Server {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetServerConfig")
	ret0, _ := ret[0].(configmodel.Server)
	return ret0
}

// GetServerConfig indicates an expected call of GetServerConfig.
func (mr *MockConfigMockRecorder) GetServerConfig() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetServerConfig", reflect.TypeOf((*MockConfig)(nil).GetServerConfig))
}
